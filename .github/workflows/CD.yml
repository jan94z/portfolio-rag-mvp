name: Build and Deploy to DigitalOcean Droplet

on:
  push:
    branches:
      - main

jobs:
  build-and-push: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/portfolio-rag-mvp-api:latest

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/portfolio-rag-mvp-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Decode SSH key and set permissions
        run: |
          echo "${{ secrets.DROPLET_SSH_KEY }}" | base64 -d > private_key
          chmod 600 private_key

      - name: Install Docker on Droplet
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key root@${{ secrets.DROPLET_IP }} "snap install docker"
      - name: Docker login on Droplet
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key root@${{ secrets.DROPLET_IP }} << EOF
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          EOF

      - name: Ensure /root/app exists
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key root@${{ secrets.DROPLET_IP }} "mkdir -p /root/app"

      - name: Copy Docker Compose file to Droplet
        run: |
          scp -o StrictHostKeyChecking=no -i private_key infra/deploy/docker-compose.yml root@${{ secrets.DROPLET_IP }}:/root/app/docker-compose.yml

      - name: Create .env file on Droplet
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key root@${{ secrets.DROPLET_IP }} << EOF
            echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" > /root/app/.env
            echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> /root/app/.env
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> /root/app/.env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> /root/app/.env
            echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> /root/app/.env
          EOF

      - name: Pull and start containers on Droplet
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key root@${{ secrets.DROPLET_IP }} << EOF
            cd /root/app
            docker compose pull
            docker compose down
            docker compose up -d
          EOF

