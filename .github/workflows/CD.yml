name: Build and Deploy to DigitalOcean K8s

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./app/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/portfolio-rag-mvp:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: v1.29.1

      - name: Set up kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      # --- Create OpenAI API Key secret dynamically from GitHub secrets ---
      - name: Create OpenAI API Key secret
        run: |
          kubectl create secret generic openai-secret \
            --from-literal=OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
            --dry-run=client -o yaml | kubectl apply -f -

      # --- Deploy PVCs, then Deployments, then Ingress ---
      - name: Deploy Qdrant PVC
        run: kubectl apply -f infra/k8s/qdrant-pvc.yml

      - name: Deploy Qdrant
        run: kubectl apply -f infra/k8s/qdrant-deployment.yml

      - name: Deploy API
        env:
          IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/portfolio-rag-mvp:latest
        run:  envsubst < infra/k8s/api-deployment.yml | kubectl apply -f -

      - name: Deploy Ingress
        run: kubectl apply -f infra/k8s/api-ingress.yml


