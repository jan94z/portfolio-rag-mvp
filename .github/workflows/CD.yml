name: Build and Deploy to DigitalOcean Droplet

on:
  push:
    branches:
      - main
      - deployment

jobs:
  # build-and-push:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push API image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         file: ./app/Dockerfile
  #         push: true
  #         tags: ${{ secrets.DOCKERHUB_USERNAME }}/portfolio-rag-mvp:latest

  deploy:
    runs-on: ubuntu-latest
    # needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Decode SSH key and set permissions
        run: |
          echo "${{ secrets.DROPLET_SSH_KEY }}" | base64 -d > private_key
          chmod 600 private_key

      - name: Copy Docker Compose file to Droplet
        run: |
          scp -o StrictHostKeyChecking=no -i private_key infra/deploy/docker-compose.yml root@${{ secrets.DROPLET_IP }}:/root/app/docker-compose.yml

      - name: Create .env file on Droplet
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key root@${{ secrets.DROPLET_IP }} << EOF
            mkdir -p /root/app
            echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" > /root/app/.env
            echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> /root/app/.env
          EOF

      - name: Pull and start containers on Droplet
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key root@${{ secrets.DROPLET_IP }} << EOF
            cd /root/app
            docker compose pull
            docker compose down
            docker compose up -d
          EOF

